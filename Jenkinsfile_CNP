#!groovy

@Library("Infrastructure")

def type = "java"
def product = "rd"
def component = "user-profile-api"

def secrets = [
        's2s-${env}': [
                secret('microservicekey-rd-user-profile-api', 'S2S_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}


def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withPipeline(type, product, component) {

    /*after('smoketest:aat') {
        sh "rm -rf infrastructure/"
    }*/

    env.S2S_URL_TO_TEST = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    env.IDAM_URL_TO_TEST = "https://idam-api.aat.platform.hmcts.net"
    env.TEST_URL = "http://rd-user-profile-api-aat.service.core-compute-aat.internal"

    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)

    enableDbMigration('rd')
    enableDockerBuild()
    installCharts()
    disableLegacyDeploymentOnAAT()
   enableAksStagingDeployment()

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

}
